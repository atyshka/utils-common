name: Test utils_common
on:
  # to test
  pull_request:
  schedule:
    # Run every hour. This helps detect flakiness,
    # and broken external dependencies.
    - cron:  '0 * * * *'

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ros_distro: [kinetic, melodic, dashing]
        include:
        - ros_distro: kinetic
          ubuntu_distro: xenial
        - ros_distro: melodic
          ubuntu_distro: bionic
        - ros_distro: dashing
          ubuntu_distro: bionic
    container:
      image: rostooling/setup-ros-docker:ubuntu-${{ matrix.ubuntu_distro }}-ros-${{ matrix.ros_distro }}-ros-base-latest
    outputs:
      build_result: ${{ steps.build.outcome }}
      test_result: ${{ steps.test.outcome }}
    steps:
      # done for cloudwatch reporting
    - uses: actions/checkout@v2
      with:
        ref: release-latest
    # TODO(setup-ros-docker#7): calling chown is necessary for now
    - run: sudo chown -R rosbuild:rosbuild "$HOME" .
    - uses: ros-tooling/action-ros-ci@0.0.17
      with:
        vcs-repo-file-url: "${{ github.workspace }}/.github/workflows/release_latest.repos"
        package-name: aws_common
        source-ros-binary-installation: ${{ matrix.ros_distro }}
    - uses: actions/upload-artifact@v1
      with:
        name: colcon-logs-${{ matrix.ubuntu_distro }}-ros-${{ matrix.ros_distro }}
        path: ros_ws/log
  log_workflow_status_to_cloudwatch:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:bionic
    needs:
    - build_and_test
    if: always()  # run even if the dependent jobs have failed to log failures
    # Allow build reports to fail on pull requests.
    # When a contribution is made on a fork, the secrets will not be available,
    # and this step will be failing. This is acceptable.
    # On the other end, we want to be notified if this happens on merge, or
    # on schedule.
    continue-on-error: ${{ github.event_name == 'pull_request'}}
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - uses: ros-tooling/action-cloudwatch-metrics@0.0.4
      with:
        # Checks if any of the jobs have failed.
        #
        # needs.*.result is returns the list of all success statuses as an
        # array, i.e. ['success', 'failure, 'success']
        # join() converts the array to a string 'successfailuresuccess'
        # contains() checks whether the string contains failure
        metric-value: ${{ ! contains(join(needs.*.result, ''), 'failure') && ! contains(join(needs.*.result, ''), 'cancelled') }}
